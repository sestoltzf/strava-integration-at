import { Glide } from "./Glide";
import { Table } from "./Table";
import type { TableProps, ColumnSchema, AppProps, AppManifest } from "./types";
export declare class App {
    private props;
    private glide;
    get id(): string;
    get name(): string | undefined;
    constructor(props: AppProps, glide: Glide);
    /**
     * Retrieves a table by its name.
     *
     * @param name - The name of the table to retrieve.
     * @returns A promise that resolves to the table if found, or undefined.
     */
    getTableNamed(name: string): Promise<Table<{}> | undefined>;
    /**
     * Retrieves all tables from the application.
     *
     * @returns A promise that resolves to an array of tables if successful, or undefined.
     */
    getTables(): Promise<Table<{}>[] | undefined>;
    /**
     * Constructs a new Table instance for querying.
     *
     * @param props - The properties of the table, excluding the app.
     * @returns The newly created Table instance.
     */
    table<T extends ColumnSchema>(props: Omit<TableProps<T>, "app">): Table<T>;
    /**
     * Retrieves the manifest for the app.
     */
    getManifest(): Promise<undefined | AppManifest>;
}
